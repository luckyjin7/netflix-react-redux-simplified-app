{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/Demo6/src/components/Movies.js\";\nimport React, { Component } from 'react'; // import { bindActionCreators } from \"redux\";\n\nimport { connect } from 'react-redux';\nimport { fetchMylist, fetchRecommendations } from '../store/actions/index';\nimport axios from 'axios';\nimport AddLogo from \"../static/imgs/add.svg\";\nimport RemoveLogo from \"../static/imgs/remove.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mylist = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container-img\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.mylist.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.mylist.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.removeFromMylist(props.mylist),\n      className: \"movieDisplay__container__button-btnMyList\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: RemoveLogo,\n        className: \"movieDisplay__container__button-btnMyList-add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, this), \"Remove From My List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\n_c = Mylist;\n\nconst Recommendation = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container-img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      width: \"250\",\n      height: \"400\",\n      src: `${props.recommendations.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: props.recommendations.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      props.addMylistDatabase(props.recommendations);\n    },\n    className: \"movieDisplay__container__button-btnMyList\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: AddLogo,\n      className: \"movieDisplay__container__button-btnMyList-add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), \"Add To My List\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n\n_c2 = Recommendation;\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props); // this.removeMylistDatabase = this.removeMylistDatabase.bind(this) \n    // this.addMylistDatabase = this.addMylistDatabase.bind(this)\n\n    this.removeFromMylist = this.removeFromMylist.bind(this);\n    this.state = {\n      mylist: [],\n      recommendations: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/mylist/').then(res => {\n      this.setState({\n        mylist: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get('http://localhost:5000/recommendations/').then(res => {\n      this.setState({\n        recommendations: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  removeFromMylist(list) {\n    console.log(this.state.mylist);\n    this.setState({\n      mylist: this.state.mylist.filter(el => el._id !== list._id),\n      recommendations: this.state.recommendations.push(list)\n    });\n  } // update the database at the same time\n  // removeMylistDatabase(list) {\n  //     axios.post('http://localhost:5000/recommendations/add/',list)\n  //       .then(response => { console.log(response.data)});\n  //     axios.delete('http://localhost:5000/mylist/'+list._id)\n  //       .then(response => { console.log(response.data)});\n  //     this.setState({\n  //       recommendations:JSON.parse(this.state.recommendations).push(list),\n  //       mylist: this.state.mylist.filter(el => el._id !== list._id)\n  //     })\n  //   }\n  // addMylistDatabase(recommendation){\n  //     axios.post('http://localhost:5000/mylist/add/', recommendation)\n  //         .then(response => { console.log(response.data)});\n  //     axios.delete('http://localhost:5000/recommendations/'+recommendation._id)\n  //       .then(response => { console.log(response.data)});\n  //     this.setState({\n  //       mylist:JSON.parse(this.state.mylist).push(recommendation),\n  //       recommendations: this.state.recommendations.filter(el => el._id !== recommendation._id)\n  //     })\n  // }\n\n\n  myList() {\n    return this.state.mylist.map(currentmylist => {\n      return /*#__PURE__*/_jsxDEV(Mylist, {\n        mylist: currentmylist,\n        removeFromMylist: this.removeFromMylist\n      }, currentmylist._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }, this); //   return <Mylist mylist={currentmylist} removeMylistDatabase={this.removeMylistDatabase} key={currentmylist._id}/>;\n    });\n  }\n\n  recommendations() {\n    return this.state.recommendations.map(currentRecommendations => {\n      return /*#__PURE__*/_jsxDEV(Recommendation, {\n        recommendations: currentRecommendations\n      }, currentRecommendations._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this); // return <Recommendation recommendations={currentRecommendations} addMylistDatabase={this.addMylistDatabase} key={currentRecommendations._id}/>;\n    });\n  }\n\n  render() {\n    //   const removeFromMylist = this.props.removeFromMylist;  \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.myList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"movieDisplay__heading\",\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.recommendations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const mapStateToProps = (state) => {\n// return { mylist: state.mylist, recommendations: state.recommendation, mylist_update: state.mylist_update }\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    mylist: state.mylist,\n    recommendations: state.recommendations\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMylist: () => dispatch(fetchMylist()),\n  fetchRecommendations: () => dispatch(fetchRecommendations())\n}); //     const mapDispatchToProps = (dispatch) => ({\n//         fetchMylist:()=>dispatch(fetchMylist()), \n//         fetchRecommendations:()=>dispatch(fetchRecommendations()),\n//         onRemoveClick:()=>dispatch(removeFromMylist())\n//   })\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mylist\");\n$RefreshReg$(_c2, \"Recommendation\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/Demo6/src/components/Movies.js"],"names":["React","Component","connect","fetchMylist","fetchRecommendations","axios","Mylist","props","mylist","img","title","removeFromMylist","RemoveLogo","Recommendation","recommendations","addMylistDatabase","AddLogo","Movies","constructor","bind","state","componentDidMount","get","then","res","setState","data","catch","error","console","log","list","filter","el","_id","push","myList","map","currentmylist","currentRecommendations","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\n\nimport { fetchMylist, fetchRecommendations } from '../store/actions/index';\nimport axios from 'axios';\n\nimport AddLogo from '../static/imgs/add.svg';\nimport RemoveLogo from '../static/imgs/remove.svg';\n\nconst Mylist = props => (\n    <div>\n      <div className=\"movieDisplay__container-img\">\n        <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.mylist.img}`}/>         \n          <h3>{props.mylist.title}</h3>\n            <button onClick={ () => props.removeFromMylist(props.mylist) } className=\"movieDisplay__container__button-btnMyList\">\n            {/* <button onClick={() =>{ props.removeMylistDatabase(props.mylist); props.onRemoveClick(props.mylist);}} className=\"movieDisplay__container__button-btnMyList\"> */}\n              <img src={RemoveLogo} className=\"movieDisplay__container__button-btnMyList-add\"/>\n              {/* <RemoveLogo className=\"movieDisplay__container__button-btnMyList-add\"/> */}\n              Remove From My List\n            </button>\n        </div>\n      </div>\n)\n\nconst Recommendation = props => (\n    <div>\n    <div className=\"movieDisplay__container-img\">\n      <img width=\"250\" height=\"400\" src={`${props.recommendations.img}`}/>\n    </div>\n    <h3>{props.recommendations.title}</h3>\n      <button onClick={() =>{ props.addMylistDatabase(props.recommendations) }} className=\"movieDisplay__container__button-btnMyList\">\n        <img src={AddLogo} className=\"movieDisplay__container__button-btnMyList-add\" />\n          Add To My List\n      </button>\n    </div>\n)  \n\nclass Movies extends Component {\n    constructor(props) {\n        super(props)\n\n        // this.removeMylistDatabase = this.removeMylistDatabase.bind(this) \n        // this.addMylistDatabase = this.addMylistDatabase.bind(this)\n        this.removeFromMylist = this.removeFromMylist.bind(this)\n        this.state = {\n             mylist:[],\n             recommendations:[]\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/mylist/')\n        .then(res => {\n            this.setState({\n                mylist:res.data\n            })\n        })\n        .catch(error=>{\n            console.log(error)\n        })\n\n        axios.get('http://localhost:5000/recommendations/')\n        .then(res => {\n            this.setState({\n                recommendations:res.data\n            })\n        })\n        .catch(error=>{\n            console.log(error)\n        })\n        }\n\n    removeFromMylist(list){\n        console.log(this.state.mylist);\n        this.setState({\n            mylist: this.state.mylist.filter(el => el._id !== list._id),\n            recommendations:this.state.recommendations.push(list)\n        })\n    }\n\n    // update the database at the same time\n    // removeMylistDatabase(list) {\n    //     axios.post('http://localhost:5000/recommendations/add/',list)\n    //       .then(response => { console.log(response.data)});\n    //     axios.delete('http://localhost:5000/mylist/'+list._id)\n    //       .then(response => { console.log(response.data)});\n    //     this.setState({\n    //       recommendations:JSON.parse(this.state.recommendations).push(list),\n    //       mylist: this.state.mylist.filter(el => el._id !== list._id)\n    //     })\n    //   }\n    \n    // addMylistDatabase(recommendation){\n    //     axios.post('http://localhost:5000/mylist/add/', recommendation)\n    //         .then(response => { console.log(response.data)});\n    //     axios.delete('http://localhost:5000/recommendations/'+recommendation._id)\n    //       .then(response => { console.log(response.data)});\n    //     this.setState({\n    //       mylist:JSON.parse(this.state.mylist).push(recommendation),\n    //       recommendations: this.state.recommendations.filter(el => el._id !== recommendation._id)\n    //     })\n    // }\n\n\n    myList() {\n        return this.state.mylist.map(currentmylist => {\n          return <Mylist mylist={currentmylist} removeFromMylist={this.removeFromMylist} key={currentmylist._id}/>;\n        //   return <Mylist mylist={currentmylist} removeMylistDatabase={this.removeMylistDatabase} key={currentmylist._id}/>;\n        })\n      }\n    \n    recommendations() {\n        return this.state.recommendations.map(currentRecommendations => {\n            return <Recommendation recommendations={currentRecommendations} key={currentRecommendations._id}/>;\n            // return <Recommendation recommendations={currentRecommendations} addMylistDatabase={this.addMylistDatabase} key={currentRecommendations._id}/>;\n        })\n    }\n\n    render() {\n    //   const removeFromMylist = this.props.removeFromMylist;  \n      return (\n        <div>\n            <h2 className=\"movieDisplay__heading\">My List</h2>\n            <div className=\"movieDisplay__container\">{ this.myList() }</div>\n            <h3 className=\"movieDisplay__heading\">Recommendations</h3>\n            <div className=\"movieDisplay__container\">{ this.recommendations() }</div>\n        </div>\n      )\n    }\n  }\n  \n    // const mapStateToProps = (state) => {\n    // return { mylist: state.mylist, recommendations: state.recommendation, mylist_update: state.mylist_update }\n    // }\n  const mapStateToProps = (state) => {\n        return { mylist: state.mylist, recommendations: state.recommendations }\n  }\n  \n  const mapDispatchToProps = (dispatch) => ({\n        fetchMylist:()=>dispatch(fetchMylist()), \n        fetchRecommendations:()=>dispatch(fetchRecommendations())\n  })\n\n//     const mapDispatchToProps = (dispatch) => ({\n//         fetchMylist:()=>dispatch(fetchMylist()), \n//         fetchRecommendations:()=>dispatch(fetchRecommendations()),\n//         onRemoveClick:()=>dispatch(removeFromMylist())\n//   })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Movies);"]},"metadata":{},"sourceType":"module"}