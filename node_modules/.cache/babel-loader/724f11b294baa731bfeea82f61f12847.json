{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/Demo6/src/components/Movies.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\nimport { fetchMylist, fetchRecommendations, removeFromMylist } from '../store/actions/index';\nimport axios from 'axios'; // import removeFromMylist from '../store/reducers/removeFromMylist';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mylist = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"movieDisplay__container__dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.mylist.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content-a\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.onRemoveClick(props.mylist);\n        },\n        className: \"movieDisplay__container__dropdown-content__button\",\n        children: \"REMOVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\\xA0\", props.mylist.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 7\n}, this);\n\n_c = Mylist;\n\nconst Recommendation = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"movieDisplay__container__dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.recommendations.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content-a\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.addToMylist(props.recommendations);\n        },\n        className: \"movieDisplay__container__dropdown-content__button\",\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), \"\\xA0\\xA0\\xA0\", props.recommendations.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 9\n}, this);\n\n_c2 = Recommendation;\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.removeFromMylist = this.removeFromMylist.bind(this);\n    this.addToMylist = this.addToMylist.bind(this);\n    this.state = {\n      mylist: [],\n      recommendations: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMylist().then(res => {\n      this.setState({\n        mylist: res.payload\n      });\n    });\n    this.props.fetchRecommendations().then(res => {\n      this.setState({\n        recommendations: res.payload\n      });\n    });\n  } // removeFromMylist(list){\n  //         let mylist_ids = this.state.mylist.map(i=>i['id']);\n  //         let recommendations_ids = this.state.recommendations.map(i=>i['id']);\n  //         if (!((mylist_ids.includes(list.id)) && (recommendations_ids.includes(list.id)))){\n  //         this.setState({\n  //             mylist: this.state.mylist.filter(el => el.id !== list.id),\n  //             recommendations:this.state.recommendations.concat(list)\n  //         })\n  //         // update the database simultaneously       \n  //         axios.post('http://localhost:5000/recommendations/add/',list)\n  //           .then(response => { console.log(response.data)});\n  //         axios.delete('http://localhost:5000/mylist/'+list._id)\n  //           .then(response => { console.log(response.data)});\n  //     } \n  // }\n\n\n  addToMylist(recommendation) {\n    let mylist_ids = this.state.mylist.map(i => i['id']);\n    let recommendations_ids = this.state.recommendations.map(i => i['id']);\n\n    if (!(mylist_ids.includes(recommendation.id) && recommendations_ids.includes(recommendation.id))) {\n      this.setState({\n        recommendations: this.state.recommendations.filter(el => el.id !== recommendation.id),\n        mylist: this.state.mylist.concat(recommendation)\n      }); // axios.post('http://localhost:5000/mylist/add/', recommendation)\n      //     .then(response => { console.log(response.data)});\n      // axios.delete('http://localhost:5000/recommendations/'+recommendation._id)\n      //     .then(response => { console.log(response.data)});\n    }\n  }\n\n  myList() {\n    return this.state.mylist.map(currentmylist => {\n      //   return <Mylist mylist={currentmylist} removeFromMylist={this.removeFromMylist} key={currentmylist._id}/>;\n      return /*#__PURE__*/_jsxDEV(Mylist, {\n        mylist: currentmylist,\n        onRemoveClick: this.onRemoveClick\n      }, currentmylist._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }, this);\n    });\n  }\n\n  recommendations() {\n    return this.state.recommendations.map(currentRecommendations => {\n      return /*#__PURE__*/_jsxDEV(Recommendation, {\n        recommendations: currentRecommendations,\n        addToMylist: this.addToMylist\n      }, currentRecommendations._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.myList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.recommendations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mylist: state.mylist,\n    recommendations: state.recommendations\n  };\n}; //   const mapDispatchToProps = () =>{\n//       return function (dispatch) {\n//         fetchMylist:()=>dispatch(fetchMylist()),\n//           dispatch(fetchRecommendations())\n//           onRemoveClick:()=>dispatch(removeFromMylist())\n//         //   removeFromMylist:()=>{dispatch({type:'REMOVE_FROM_MYLIST'})}\n//       }\n//   }\n//   const mapDispatchToProps = (dispatch) => {\n//     return bindActionCreators({ fetchMylist, fetchRecommendations }, dispatch)\n//   }\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMylist: () => dispatch(fetchMylist()),\n  fetchRecommendations: () => dispatch(fetchRecommendations()),\n  onRemoveClick: () => dispatch(removeFromMylist())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mylist\");\n$RefreshReg$(_c2, \"Recommendation\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/Demo6/src/components/Movies.js"],"names":["React","Component","bindActionCreators","connect","fetchMylist","fetchRecommendations","removeFromMylist","axios","Mylist","props","mylist","img","onRemoveClick","title","Recommendation","recommendations","addToMylist","Movies","constructor","bind","state","componentDidMount","then","res","setState","payload","recommendation","mylist_ids","map","i","recommendations_ids","includes","id","filter","el","concat","myList","currentmylist","_id","currentRecommendations","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\n\nimport { fetchMylist, fetchRecommendations, removeFromMylist } from '../store/actions/index';\nimport axios from 'axios';\n// import removeFromMylist from '../store/reducers/removeFromMylist';\n\nconst Mylist = props => (\n      <div className=\"movieDisplay__container__dropdown\">\n          <div className=\"movieDisplay__container__dropdown__img\">\n              <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.mylist.img}`}/>\n          </div>\n            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />         \n            <div className=\"movieDisplay__container__dropdown-content\">\n            <div className=\"movieDisplay__container__dropdown-content-a\">\n                {/* <button onClick={ () => {props.removeFromMylist(props.mylist)}} className=\"movieDisplay__container__dropdown-content__button\">REMOVE</button>&nbsp;&nbsp;&nbsp; */}\n                <button onClick={ () => {props.onRemoveClick(props.mylist)}} className=\"movieDisplay__container__dropdown-content__button\">REMOVE</button>&nbsp;&nbsp;&nbsp;\n                {props.mylist.title}\n            </div>                              \n            </div>\n     </div>\n)\n\nconst Recommendation = props => (\n        <div className=\"movieDisplay__container__dropdown\">\n            <div className=\"movieDisplay__container__dropdown__img\">\n                <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.recommendations.img}`}/>\n            </div>\n            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />\n            <div className=\"movieDisplay__container__dropdown-content\">\n                <div className=\"movieDisplay__container__dropdown-content-a\">\n                    <button onClick={ () => {props.addToMylist(props.recommendations)}} className=\"movieDisplay__container__dropdown-content__button\">ADD</button>&nbsp;&nbsp;&nbsp;\n                    {props.recommendations.title}\n                </div>                              \n            </div>\n        </div>\n)  \n\nclass Movies extends Component {\n    constructor(props) {\n        super(props)\n\n        this.removeFromMylist = this.removeFromMylist.bind(this);\n        this.addToMylist = this.addToMylist.bind(this);\n\n        this.state = {\n             mylist:[],\n             recommendations:[]\n        }\n    }\n\n    componentDidMount() {\n            this.props.fetchMylist()\n                    .then(res => {\n                        this.setState({\n                            mylist:res.payload\n                        })\n                    })\n            this.props.fetchRecommendations()\n                    .then(res => {\n                        this.setState({\n                            recommendations:res.payload\n                        })\n                    })     \n        }\n        \n    // removeFromMylist(list){\n    //         let mylist_ids = this.state.mylist.map(i=>i['id']);\n    //         let recommendations_ids = this.state.recommendations.map(i=>i['id']);\n    //         if (!((mylist_ids.includes(list.id)) && (recommendations_ids.includes(list.id)))){\n    //         this.setState({\n    //             mylist: this.state.mylist.filter(el => el.id !== list.id),\n    //             recommendations:this.state.recommendations.concat(list)\n    //         })\n\n    //         // update the database simultaneously       \n    //         axios.post('http://localhost:5000/recommendations/add/',list)\n    //           .then(response => { console.log(response.data)});\n    //         axios.delete('http://localhost:5000/mylist/'+list._id)\n    //           .then(response => { console.log(response.data)});\n    //     } \n    // }\n\n    addToMylist(recommendation){\n        let mylist_ids = this.state.mylist.map(i=>i['id']);\n        let recommendations_ids = this.state.recommendations.map(i=>i['id']);\n        if (!((mylist_ids.includes(recommendation.id)) && (recommendations_ids.includes(recommendation.id)))){    \n        this.setState({\n            recommendations: this.state.recommendations.filter(el => el.id !== recommendation.id),\n            mylist:this.state.mylist.concat(recommendation)\n        }) \n\n        // axios.post('http://localhost:5000/mylist/add/', recommendation)\n        //     .then(response => { console.log(response.data)});\n        // axios.delete('http://localhost:5000/recommendations/'+recommendation._id)\n        //     .then(response => { console.log(response.data)});\n        }\n    }\n\n\n    myList() {\n        return this.state.mylist.map(currentmylist => {\n        //   return <Mylist mylist={currentmylist} removeFromMylist={this.removeFromMylist} key={currentmylist._id}/>;\n        return <Mylist mylist={currentmylist} onRemoveClick={this.onRemoveClick} key={currentmylist._id}/>;\n        })\n      }\n    \n    recommendations() {\n        return this.state.recommendations.map(currentRecommendations => {\n            return <Recommendation recommendations={currentRecommendations} addToMylist={this.addToMylist} key={currentRecommendations._id}/>;\n        })\n    }\n\n    render() {\n      return (\n        <div>\n            <h2 className=\"movieDisplay__heading\">My List</h2>\n            <div className=\"movieDisplay__container\">{ this.myList() }</div>\n            <h2 className=\"movieDisplay__heading\">Recommendations</h2>  \n            <div className=\"movieDisplay__container\">{ this.recommendations() }</div>                 \n        </div>\n      )\n    }\n  }\n\n\n  const mapStateToProps = (state) => {\n        return {mylist: state.mylist, recommendations: state.recommendations }\n  }\n\n//   const mapDispatchToProps = () =>{\n//       return function (dispatch) {\n//         fetchMylist:()=>dispatch(fetchMylist()),\n//           dispatch(fetchRecommendations())\n//           onRemoveClick:()=>dispatch(removeFromMylist())\n//         //   removeFromMylist:()=>{dispatch({type:'REMOVE_FROM_MYLIST'})}\n//       }\n//   }\n\n//   const mapDispatchToProps = (dispatch) => {\n//     return bindActionCreators({ fetchMylist, fetchRecommendations }, dispatch)\n//   }\n\n    const mapDispatchToProps = (dispatch) => ({\n        fetchMylist:()=>dispatch(fetchMylist()), \n        fetchRecommendations:()=>dispatch(fetchRecommendations()),\n        onRemoveClick:()=>dispatch(removeFromMylist())\n  })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Movies);"]},"metadata":{},"sourceType":"module"}