{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display({\n  data,\n  fetchMovies\n}) {\n  _s();\n\n  useEffect(() => {\n    // console.log(fetchMovies());\n    fetchMovies();\n  }, []);\n  return data.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 28\n  }, this) : data.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: data.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 62\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data && data.mylist && data.mylist.map(function (mylist) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mylist.img,\n            alt: \"p1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Display, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Display;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovies: () => dispatch(fetchMovies())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js"],"names":["React","useEffect","connect","fetchMovies","Display","data","loading","error","mylist","map","img","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,IAAF;AAAQF,EAAAA;AAAR,CAAjB,EAAuC;AAAA;;AACnCF,EAAAA,SAAS,CAAC,MAAI;AACV;AACAE,IAAAA,WAAW;AACd,GAHQ,EAGN,EAHM,CAAT;AAIA,SAAOE,IAAI,CAACC,OAAL,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,GAAoCD,IAAI,CAACE,KAAL,gBAAc;AAAA,cAAKF,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,UAAd,gBACvC;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,gBACKF,IAAI,IAAIA,IAAI,CAACG,MAAb,IAAuBH,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAgB,UAASD,MAAT,EAAgB;AACpD,4BACI;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEA,MAAM,CAACE,GAAjB;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANuB;AAD5B;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GApBQN,O;;KAAAA,O;;AAsBT,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLP,IAAAA,IAAI,EAAEO,KAAK,CAACP;AADP,GAAP;AAGH,CAJD;;AAMA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLX,IAAAA,WAAW,EAAE,MAAMW,QAAQ,CAACX,WAAW,EAAZ;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export';\n\nfunction Display({ data, fetchMovies }){\n    useEffect(()=>{\n        // console.log(fetchMovies());\n        fetchMovies();\n    }, []);\n    return data.loading ? (<h2>Loading</h2>) : data.error ? (<h2>{data.error}</h2>):(\n        <div>\n            <h1>My List</h1>\n            {/* <p>{\"Data is: \",console.log(data)}</p> */}\n            <div>\n                {data && data.mylist && data.mylist.map(function(mylist){\n                    return (\n                        <div>\n                            <img src={mylist.img} alt=\"p1\"/>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      data: state.data,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchMovies: () => dispatch(fetchMovies())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n"]},"metadata":{},"sourceType":"module"}