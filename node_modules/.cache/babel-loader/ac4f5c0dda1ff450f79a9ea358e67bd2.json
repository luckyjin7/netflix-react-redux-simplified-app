{"ast":null,"code":"import { FETCH_DATA_REQUEST } from '../actions/index';\nimport { FETCH_DATA_SUCCESS } from '../actions/index';\nimport { FETCH_DATA_FAILURE } from '../actions/index';\nexport const initialState = {\n  loading: false,\n  mylist: [],\n  recommendations: []\n};\nexport default reducer = (state = {\n  initialState\n}, action) => {\n  switch (action.type) {\n    case FETCH_DATA_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_DATA_SUCCESS:\n      return {\n        loading: false,\n        mylist: action.payload.mylist,\n        recommendations: action.payload.recommendations,\n        error: \"\"\n      };\n\n    case FETCH_DATA_FAILURE:\n      return {\n        loading: false,\n        mylist: [],\n        recommendations: [],\n        error: action.payload\n      };\n  }\n};","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/store/reducers/fetchMylist.js"],"names":["FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","initialState","loading","mylist","recommendations","reducer","state","action","type","payload","error"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,kBAAnC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAC,KADkB;AAE1BC,EAAAA,MAAM,EAAC,EAFmB;AAG1BC,EAAAA,eAAe,EAAC;AAHU,CAArB;AAKP,eAAeC,OAAO,GAAG,CAACC,KAAK,GAAG;AAACL,EAAAA;AAAD,CAAT,EAAyBM,MAAzB,KAAoC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,kBAAL;AACE,aAAO,EAAC,GAAGQ,KAAJ;AAAWJ,QAAAA,OAAO,EAAE;AAApB,OAAP;;AACF,SAAKH,kBAAL;AACE,aAAO;AAAEG,QAAAA,OAAO,EAAC,KAAV;AACCC,QAAAA,MAAM,EAACI,MAAM,CAACE,OAAP,CAAeN,MADvB;AAECC,QAAAA,eAAe,EAAEG,MAAM,CAACE,OAAP,CAAeL,eAFjC;AAGCM,QAAAA,KAAK,EAAC;AAHP,OAAP;;AAIF,SAAKV,kBAAL;AACE,aAAO;AAAEE,QAAAA,OAAO,EAAE,KAAX;AACGC,QAAAA,MAAM,EAAE,EADX;AAEGC,QAAAA,eAAe,EAAE,EAFpB;AAGGM,QAAAA,KAAK,EAACH,MAAM,CAACE;AAHhB,OAAP;AATJ;AAcD,CAfH","sourcesContent":["import { FETCH_DATA_REQUEST } from '../actions/index';\nimport { FETCH_DATA_SUCCESS } from '../actions/index';\nimport { FETCH_DATA_FAILURE } from '../actions/index';\n\nexport const initialState = {\n  loading:false,\n  mylist:[],\n  recommendations:[]\n}\nexport default reducer = (state = {initialState}, action) => {\n    switch (action.type) {\n      case FETCH_DATA_REQUEST:\n        return {...state, loading: true}\n      case FETCH_DATA_SUCCESS:\n        return { loading:false, \n                mylist:action.payload.mylist,\n                recommendations: action.payload.recommendations,\n                error:\"\"}\n      case FETCH_DATA_FAILURE:\n        return { loading: false,\n                  mylist: [],\n                  recommendations: [],\n                  error:action.payload}\n    }\n  }"]},"metadata":{},"sourceType":"module"}