{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export';\nimport { removeMovieAction } from '../store/actions/export';\nimport { addMovieAction } from '../store/actions/export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Display({\n  data,\n  fetchMovies,\n  removeMovieAction,\n  addMovieAction\n}) {\n  _s();\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const Mylist = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown__img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"movies\",\n        width: \"250\",\n        height: \"400\",\n        src: `${props.mylist.img}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container__dropdown-content-a\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.removeMovieAction(props.mylist);\n          },\n          className: \"movieDisplay__container__dropdown-content__button\",\n          children: \"REMOVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\\xA0\", props.mylist.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n\n  const Recommendation = props => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown__img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"movies\",\n        width: \"250\",\n        height: \"400\",\n        src: `${props.recommendations.img}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container__dropdown-content-a\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.addMovieAction(props.recommendations);\n          },\n          className: \"movieDisplay__container__dropdown-content__button\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\\xA0\", props.recommendations.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n\n  return data.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__heading\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: data.mylist.map(function (currentmylist) {\n          return /*#__PURE__*/_jsxDEV(Mylist, {\n            mylist: currentmylist,\n            removeMovieAction: this.removeMovieAction\n          }, currentmylist._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__heading\",\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: data.recommendations.map(function (currentRecommendations) {\n          return /*#__PURE__*/_jsxDEV(Recommendation, {\n            recommendations: currentRecommendations,\n            addMovieAction: this.addMovieAction\n          }, currentRecommendations._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Display, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Display;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovies: () => dispatch(fetchMovies()),\n    removeMovieAction: movie => {\n      dispatch(removeMovieAction(movie));\n    },\n    addMovieAction: movie => {\n      dispatch(addMovieAction(movie));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js"],"names":["React","useEffect","connect","fetchMovies","removeMovieAction","addMovieAction","Display","data","Mylist","props","mylist","img","title","Recommendation","recommendations","loading","map","currentmylist","_id","currentRecommendations","mapStateToProps","state","mapDispatchToProps","dispatch","movie"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export';\nimport { removeMovieAction } from '../store/actions/export';\nimport { addMovieAction } from '../store/actions/export';\n\nfunction Display({ data, fetchMovies, removeMovieAction, addMovieAction }){\n    useEffect(()=>{\n        fetchMovies();\n    }, []);\n\n    const Mylist = props => (\n        <div className=\"movieDisplay__container__dropdown\">\n            <div className=\"movieDisplay__container__dropdown__img\">\n                    <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.mylist.img}`}/>\n            </div>\n            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />\n            <div className=\"movieDisplay__container__dropdown-content\">\n                <div className=\"movieDisplay__container__dropdown-content-a\">\n                    <button onClick={ () => {props.removeMovieAction(props.mylist)}} className=\"movieDisplay__container__dropdown-content__button\">REMOVE</button>&nbsp;&nbsp;&nbsp;\n                    {props.mylist.title}\n                </div>                              \n            </div>\n        </div>\n    )\n\n    const Recommendation = props => (\n        <div className=\"movieDisplay__container__dropdown\">\n            <div className=\"movieDisplay__container__dropdown__img\">\n                <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.recommendations.img}`}/>\n            </div>\n            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />\n            <div className=\"movieDisplay__container__dropdown-content\">\n                <div className=\"movieDisplay__container__dropdown-content-a\">\n                    <button onClick={ () => {props.addMovieAction(props.recommendations)}} className=\"movieDisplay__container__dropdown-content__button\">ADD</button>&nbsp;&nbsp;&nbsp;\n                    {props.recommendations.title}\n                </div>                              \n            </div>\n        </div>\n    ) \n\n    return data.loading ? (<h2>Loading</h2>) : (\n        <div>\n            <>\n            <div className=\"movieDisplay__heading\">My List</div>\n                <div className=\"movieDisplay__container\">\n                    {data.mylist.map(function(currentmylist){\n                        return (\n                            <Mylist mylist={currentmylist} removeMovieAction={this.removeMovieAction} key={currentmylist._id}/>\n                        )\n                    })}\n                </div>\n            </>\n\n            <>       \n            <div className=\"movieDisplay__heading\">Recommendations</div>\n            <div className=\"movieDisplay__container\">\n                {data.recommendations.map(function(currentRecommendations){\n                    return (\n                        <Recommendation recommendations={currentRecommendations} addMovieAction={this.addMovieAction} key={currentRecommendations._id}/>\n                    )\n                })}\n            </div>\n            </> \n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      data: state.data,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchMovies: () => dispatch(fetchMovies()),\n      removeMovieAction: (movie) => {\n          dispatch(removeMovieAction(movie))\n      },\n      addMovieAction: (movie) => {\n          dispatch(addMovieAction(movie))\n      }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n"]},"metadata":{},"sourceType":"module"}