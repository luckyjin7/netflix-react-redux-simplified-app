{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export'; // function Display({ data, fetchMovies }){\n//     useEffect(()=>{\n//         fetchMovies();\n//     }, []);\n//     return data.loading ? (<h2>Loading</h2>) : data.error ? (<h2>{data.error}</h2>):(\n//         <div>\n//             <h1>My List</h1>\n//             {/* <p>{\"Data is: \",console.log(data)}</p> */}\n//             <div>\n//                 {data && data.mylist && data.mylist.map(function(mylist){\n//                     return (\n//                         <div>\n//                             <img src={mylist.img} alt=\"p1\"/>\n//                         </div>\n//                     )\n//                 })}\n//             </div>\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mylist = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"movieDisplay__container__dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.mylist.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content-a\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.removeFromMylist(props.mylist);\n        },\n        className: \"movieDisplay__container__dropdown-content__button\",\n        children: \"REMOVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), \"\\xA0\\xA0\\xA0\", props.mylist.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n\n_c = Mylist;\n\nconst Recommendation = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"movieDisplay__container__dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.recommendations.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content-a\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.addToMylist(props.recommendations);\n        },\n        className: \"movieDisplay__container__dropdown-content__button\",\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), \"\\xA0\\xA0\\xA0\", props.recommendations.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 7\n}, this);\n\n_c2 = Recommendation;\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n    this.removeFromMylist = this.removeFromMylist.bind(this);\n    this.addToMylist = this.addToMylist.bind(this);\n    this.state = {\n      mylist: [],\n      recommendations: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMovies().then(res => {\n      this.setState({\n        mylist: res.payload.mylist,\n        recommendations: res.payload.recommendations\n      });\n    });\n  }\n\n  myList() {\n    return this.state.mylist.map(currentmylist => {\n      return /*#__PURE__*/_jsxDEV(Mylist, {\n        mylist: currentmylist,\n        removeFromMylist: this.removeFromMylist\n      }, currentmylist._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }, this);\n    });\n  }\n\n  recommendations() {\n    return this.state.recommendations.map(currentRecommendations => {\n      return /*#__PURE__*/_jsxDEV(Recommendation, {\n        recommendations: currentRecommendations,\n        addToMylist: this.addToMylist\n      }, currentRecommendations._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.myList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.recommendations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovies: () => dispatch(fetchMovies())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mylist\");\n$RefreshReg$(_c2, \"Recommendation\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js"],"names":["React","useEffect","connect","fetchMovies","Mylist","props","mylist","img","removeFromMylist","title","Recommendation","recommendations","addToMylist","Display","Component","constructor","bind","state","componentDidMount","then","res","setState","payload","myList","map","currentmylist","_id","currentRecommendations","render","mapStateToProps","data","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export';\n\n// function Display({ data, fetchMovies }){\n//     useEffect(()=>{\n//         fetchMovies();\n//     }, []);\n//     return data.loading ? (<h2>Loading</h2>) : data.error ? (<h2>{data.error}</h2>):(\n//         <div>\n//             <h1>My List</h1>\n//             {/* <p>{\"Data is: \",console.log(data)}</p> */}\n//             <div>\n//                 {data && data.mylist && data.mylist.map(function(mylist){\n//                     return (\n//                         <div>\n//                             <img src={mylist.img} alt=\"p1\"/>\n//                         </div>\n//                     )\n//                 })}\n//             </div>\n//         </div>\n//     )\n// }\n\nconst Mylist = props => (\n    <div className=\"movieDisplay__container__dropdown\">\n        <div className=\"movieDisplay__container__dropdown__img\">\n            <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.mylist.img}`}/>\n        </div>\n          <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />         \n          <div className=\"movieDisplay__container__dropdown-content\">\n          <div className=\"movieDisplay__container__dropdown-content-a\">\n              <button onClick={ () => {props.removeFromMylist(props.mylist)}} className=\"movieDisplay__container__dropdown-content__button\">REMOVE</button>&nbsp;&nbsp;&nbsp;\n              {props.mylist.title}\n          </div>                              \n          </div>\n   </div>\n)\n\nconst Recommendation = props => (\n      <div className=\"movieDisplay__container__dropdown\">\n          <div className=\"movieDisplay__container__dropdown__img\">\n              <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.recommendations.img}`}/>\n          </div>\n          <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />\n          <div className=\"movieDisplay__container__dropdown-content\">\n              <div className=\"movieDisplay__container__dropdown-content-a\">\n                  <button onClick={ () => {props.addToMylist(props.recommendations)}} className=\"movieDisplay__container__dropdown-content__button\">ADD</button>&nbsp;&nbsp;&nbsp;\n                  {props.recommendations.title}\n              </div>                              \n          </div>\n      </div>\n) \n\nclass Display extends Component {\n    constructor(props) {\n        super(props)\n\n        this.removeFromMylist = this.removeFromMylist.bind(this);\n        this.addToMylist = this.addToMylist.bind(this);\n\n        this.state = {\n             mylist:[],\n             recommendations:[]\n        }\n    }\n\n    componentDidMount(){\n            this.props.fetchMovies()\n                .then(res => {\n                    this.setState({\n                        mylist: res.payload.mylist,\n                        recommendations: res.payload.recommendations\n                    })\n            })\n    }\n\n    myList() {\n        return this.state.mylist.map(currentmylist => {\n          return <Mylist mylist={currentmylist} removeFromMylist={this.removeFromMylist} key={currentmylist._id}/>;\n        })\n      }\n    \n    recommendations() {\n        return this.state.recommendations.map(currentRecommendations => {\n            return <Recommendation recommendations={currentRecommendations} addToMylist={this.addToMylist} key={currentRecommendations._id}/>;\n        })\n    }\n\n    render() {\n      return (\n        <div>\n            <h2 className=\"movieDisplay__heading\">My List</h2>\n            <div className=\"movieDisplay__container\">{ this.myList() }</div>\n            <h2 className=\"movieDisplay__heading\">Recommendations</h2>  \n            <div className=\"movieDisplay__container\">{ this.recommendations() }</div>                 \n        </div>\n      )\n    }\n\n}    \n\n\nconst mapStateToProps = (state) => {\n    return {\n      data: state.data,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchMovies: () => dispatch(fetchMovies())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n"]},"metadata":{},"sourceType":"module"}