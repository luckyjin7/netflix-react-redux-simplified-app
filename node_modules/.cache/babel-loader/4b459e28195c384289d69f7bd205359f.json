{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Movies.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMylist, fetchRecommendations } from '../store/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mylist = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"movieDisplay__container__dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.mylist.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 11\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content-a\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.removeFromMylist(props.mylist);\n        },\n        className: \"movieDisplay__container__dropdown-content__button\",\n        children: \"REMOVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), \"\\xA0\\xA0\\xA0\", props.mylist.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 7\n}, this);\n\n_c = Mylist;\n\nconst Recommendation = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"movieDisplay__container__dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.recommendations.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container__dropdown-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container__dropdown-content-a\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.addToMylist(props.recommendations);\n        },\n        className: \"movieDisplay__container__dropdown-content__button\",\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), \"\\xA0\\xA0\\xA0\", props.recommendations.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 9\n}, this);\n\n_c2 = Recommendation;\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.removeFromMylist = this.removeFromMylist.bind(this);\n    this.addToMylist = this.addToMylist.bind(this);\n    this.state = {\n      mylist: [],\n      recommendations: []\n    };\n  }\n\n  componentDidMount() {\n    // console.log(JSON.stringify(fetchMylist().payload))\n    // console.log(JSON.parse(fetchMylist().payload))\n    // console.log(fetchMylist().json())\n    // const printMylist = async() => {\n    //     const mylist = await fetchMylist().payload;\n    //     return mylist;\n    //     console.log(mylist);\n    // }\n    // printMylist();\n    // this.props.fetchMylist()\n    // .then(res => {\n    //     this.setState({\n    //         mylist: res.payload\n    //     })\n    // })\n    this.props.fetchMylist().then(res => {\n      console.log(res.payload);\n    }).then(data => {\n      this.setState({\n        mylist: data.map(item => ({\n          title: item.title,\n          id: item.id,\n          img: item.img\n        }))\n      });\n    });\n    console.log('mylist is:', this.mylist);\n\n    const printRecommendations = async () => {\n      const recommendations = await fetchRecommendations().payload; // return recommendations;\n\n      console.log(recommendations);\n    };\n\n    printRecommendations();\n  }\n\n  removeFromMylist(list) {\n    let mylist_ids = this.state.mylist.map(i => i['id']);\n    let recommendations_ids = this.state.recommendations.map(i => i['id']);\n\n    if (!(mylist_ids.includes(list.id) && recommendations_ids.includes(list.id))) {\n      this.setState({\n        mylist: this.state.mylist.filter(el => el.id !== list.id),\n        recommendations: this.state.recommendations.concat(list)\n      });\n    }\n  }\n\n  addToMylist(recommendation) {\n    let mylist_ids = this.state.mylist.map(i => i['id']);\n    let recommendations_ids = this.state.recommendations.map(i => i['id']);\n\n    if (!(mylist_ids.includes(recommendation.id) && recommendations_ids.includes(recommendation.id))) {\n      this.setState({\n        recommendations: this.state.recommendations.filter(el => el.id !== recommendation.id),\n        mylist: this.state.mylist.concat(recommendation)\n      });\n    }\n  }\n\n  myList() {\n    return this.state.mylist.map(currentmylist => {\n      return /*#__PURE__*/_jsxDEV(Mylist, {\n        mylist: currentmylist,\n        removeFromMylist: this.removeFromMylist\n      }, currentmylist._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 18\n      }, this);\n    });\n  }\n\n  recommendations() {\n    return this.state.recommendations.map(currentRecommendations => {\n      return /*#__PURE__*/_jsxDEV(Recommendation, {\n        recommendations: currentRecommendations,\n        addToMylist: this.addToMylist\n      }, currentRecommendations._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.myList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.recommendations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mylist: state.mylist,\n    recommendations: state.recommendations\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMylist: () => dispatch(fetchMylist()),\n  fetchRecommendations: () => dispatch(fetchRecommendations())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mylist\");\n$RefreshReg$(_c2, \"Recommendation\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Movies.js"],"names":["React","Component","connect","fetchMylist","fetchRecommendations","Mylist","props","mylist","img","removeFromMylist","title","Recommendation","recommendations","addToMylist","Movies","constructor","bind","state","componentDidMount","then","res","console","log","payload","data","setState","map","item","id","printRecommendations","list","mylist_ids","i","recommendations_ids","includes","filter","el","concat","recommendation","myList","currentmylist","_id","currentRecommendations","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,wBAAlD;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,iBACd;AAAK,EAAA,SAAS,EAAC,mCAAf;AAAA,0BACI;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA,2BACI;AAAK,MAAA,GAAG,EAAC,QAAT;AAAkB,MAAA,KAAK,EAAC,KAAxB;AAA8B,MAAA,MAAM,EAAC,KAArC;AAA2C,MAAA,GAAG,EAAG,GAAEA,KAAK,CAACC,MAAN,CAAaC,GAAI;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,eAIM;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAJN,eAKM;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAG,MAAM;AAACF,UAAAA,KAAK,CAACG,gBAAN,CAAuBH,KAAK,CAACC,MAA7B;AAAqC,SAA9D;AAAgE,QAAA,SAAS,EAAC,mDAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,kBAEKD,KAAK,CAACC,MAAN,CAAaG,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UALN;AAAA;AAAA;AAAA;AAAA;AAAA,QADN;;KAAML,M;;AAeN,MAAMM,cAAc,GAAGL,KAAK,iBACpB;AAAK,EAAA,SAAS,EAAC,mCAAf;AAAA,0BACI;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA,2BACI;AAAK,MAAA,GAAG,EAAC,QAAT;AAAkB,MAAA,KAAK,EAAC,KAAxB;AAA8B,MAAA,MAAM,EAAC,KAArC;AAA2C,MAAA,GAAG,EAAG,GAAEA,KAAK,CAACM,eAAN,CAAsBJ,GAAI;AAA7E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,eAII;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAJJ,eAKI;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAG,MAAM;AAACF,UAAAA,KAAK,CAACO,WAAN,CAAkBP,KAAK,CAACM,eAAxB;AAAyC,SAAlE;AAAoE,QAAA,SAAS,EAAC,mDAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,kBAEKN,KAAK,CAACM,eAAN,CAAsBF,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UALJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;;MAAMC,c;;AAeN,MAAMG,MAAN,SAAqBb,SAArB,CAA+B;AAC3Bc,EAAAA,WAAW,CAACT,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBO,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKH,WAAL,GAAmB,KAAKA,WAAL,CAAiBG,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKC,KAAL,GAAa;AACRV,MAAAA,MAAM,EAAC,EADC;AAERK,MAAAA,eAAe,EAAC;AAFR,KAAb;AAIH;;AAEDM,EAAAA,iBAAiB,GAAG;AACZ;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAKZ,KAAL,CAAWH,WAAX,GACSgB,IADT,CACcC,GAAG,IAAI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AAAyB,KAD/C,EAESJ,IAFT,CAEeK,IAAD,IAAQ;AACV,WAAKC,QAAL,CAAc;AACVlB,QAAAA,MAAM,EAACiB,IAAI,CAACE,GAAL,CAASC,IAAI,KAAK;AACrBjB,UAAAA,KAAK,EAAEiB,IAAI,CAACjB,KADS;AAErBkB,UAAAA,EAAE,EAAED,IAAI,CAACC,EAFY;AAGrBpB,UAAAA,GAAG,EAAEmB,IAAI,CAACnB;AAHW,SAAL,CAAb;AADG,OAAd;AAOH,KAVT;AAYAa,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKf,MAA9B;;AAEA,UAAMsB,oBAAoB,GAAG,YAAW;AACpC,YAAMjB,eAAe,GAAG,MAAMR,oBAAoB,GAAGmB,OAArD,CADoC,CAEpC;;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AACH,KAJD;;AAKAiB,IAAAA,oBAAoB;AACvB;;AAGLpB,EAAAA,gBAAgB,CAACqB,IAAD,EAAM;AACd,QAAIC,UAAU,GAAG,KAAKd,KAAL,CAAWV,MAAX,CAAkBmB,GAAlB,CAAsBM,CAAC,IAAEA,CAAC,CAAC,IAAD,CAA1B,CAAjB;AACA,QAAIC,mBAAmB,GAAG,KAAKhB,KAAL,CAAWL,eAAX,CAA2Bc,GAA3B,CAA+BM,CAAC,IAAEA,CAAC,CAAC,IAAD,CAAnC,CAA1B;;AACA,QAAI,EAAGD,UAAU,CAACG,QAAX,CAAoBJ,IAAI,CAACF,EAAzB,CAAD,IAAmCK,mBAAmB,CAACC,QAApB,CAA6BJ,IAAI,CAACF,EAAlC,CAArC,CAAJ,EAAiF;AACjF,WAAKH,QAAL,CAAc;AACVlB,QAAAA,MAAM,EAAE,KAAKU,KAAL,CAAWV,MAAX,CAAkB4B,MAAlB,CAAyBC,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUE,IAAI,CAACF,EAA9C,CADE;AAEVhB,QAAAA,eAAe,EAAC,KAAKK,KAAL,CAAWL,eAAX,CAA2ByB,MAA3B,CAAkCP,IAAlC;AAFN,OAAd;AAIH;AACJ;;AAEDjB,EAAAA,WAAW,CAACyB,cAAD,EAAgB;AACnB,QAAIP,UAAU,GAAG,KAAKd,KAAL,CAAWV,MAAX,CAAkBmB,GAAlB,CAAsBM,CAAC,IAAEA,CAAC,CAAC,IAAD,CAA1B,CAAjB;AACA,QAAIC,mBAAmB,GAAG,KAAKhB,KAAL,CAAWL,eAAX,CAA2Bc,GAA3B,CAA+BM,CAAC,IAAEA,CAAC,CAAC,IAAD,CAAnC,CAA1B;;AACA,QAAI,EAAGD,UAAU,CAACG,QAAX,CAAoBI,cAAc,CAACV,EAAnC,CAAD,IAA6CK,mBAAmB,CAACC,QAApB,CAA6BI,cAAc,CAACV,EAA5C,CAA/C,CAAJ,EAAqG;AACrG,WAAKH,QAAL,CAAc;AACVb,QAAAA,eAAe,EAAE,KAAKK,KAAL,CAAWL,eAAX,CAA2BuB,MAA3B,CAAkCC,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUU,cAAc,CAACV,EAAjE,CADP;AAEVrB,QAAAA,MAAM,EAAC,KAAKU,KAAL,CAAWV,MAAX,CAAkB8B,MAAlB,CAAyBC,cAAzB;AAFG,OAAd;AAIH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKtB,KAAL,CAAWV,MAAX,CAAkBmB,GAAlB,CAAsBc,aAAa,IAAI;AAC5C,0BAAO,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEA,aAAhB;AAA+B,QAAA,gBAAgB,EAAE,KAAK/B;AAAtD,SAA6E+B,aAAa,CAACC,GAA3F;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD;;AAEH7B,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKK,KAAL,CAAWL,eAAX,CAA2Bc,GAA3B,CAA+BgB,sBAAsB,IAAI;AAC5D,0BAAO,QAAC,cAAD;AAAgB,QAAA,eAAe,EAAEA,sBAAjC;AAAyD,QAAA,WAAW,EAAE,KAAK7B;AAA3E,SAA6F6B,sBAAsB,CAACD,GAApH;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBAA2C,KAAKJ,MAAL;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBAA2C,KAAK3B,eAAL;AAA3C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAnG0B;;AAuG3B,MAAMgC,eAAe,GAAI3B,KAAD,IAAW;AAC/B,SAAO;AAACV,IAAAA,MAAM,EAAEU,KAAK,CAACV,MAAf;AAAuBK,IAAAA,eAAe,EAAEK,KAAK,CAACL;AAA9C,GAAP;AACH,CAFD;;AAIA,MAAMiC,kBAAkB,GAAIC,QAAD,KAAe;AACtC3C,EAAAA,WAAW,EAAC,MAAI2C,QAAQ,CAAC3C,WAAW,EAAZ,CADc;AAEtCC,EAAAA,oBAAoB,EAAC,MAAI0C,QAAQ,CAAC1C,oBAAoB,EAArB;AAFK,CAAf,CAA3B;;AAKF,eAAeF,OAAO,CAAC0C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C/B,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchMylist, fetchRecommendations } from '../store/actions/index';\n\nconst Mylist = props => (\n      <div className=\"movieDisplay__container__dropdown\">\n          <div className=\"movieDisplay__container__dropdown__img\">\n              <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.mylist.img}`}/>\n          </div>\n            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />         \n            <div className=\"movieDisplay__container__dropdown-content\">\n            <div className=\"movieDisplay__container__dropdown-content-a\">\n                <button onClick={ () => {props.removeFromMylist(props.mylist)}} className=\"movieDisplay__container__dropdown-content__button\">REMOVE</button>&nbsp;&nbsp;&nbsp;\n                {props.mylist.title}\n            </div>                              \n            </div>\n     </div>\n)\n\nconst Recommendation = props => (\n        <div className=\"movieDisplay__container__dropdown\">\n            <div className=\"movieDisplay__container__dropdown__img\">\n                <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.recommendations.img}`}/>\n            </div>\n            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />\n            <div className=\"movieDisplay__container__dropdown-content\">\n                <div className=\"movieDisplay__container__dropdown-content-a\">\n                    <button onClick={ () => {props.addToMylist(props.recommendations)}} className=\"movieDisplay__container__dropdown-content__button\">ADD</button>&nbsp;&nbsp;&nbsp;\n                    {props.recommendations.title}\n                </div>                              \n            </div>\n        </div>\n)  \n\nclass Movies extends Component {\n    constructor(props) {\n        super(props)\n\n        this.removeFromMylist = this.removeFromMylist.bind(this);\n        this.addToMylist = this.addToMylist.bind(this);\n\n        this.state = {\n             mylist:[],\n             recommendations:[]\n        }\n    }\n\n    componentDidMount() {\n            // console.log(JSON.stringify(fetchMylist().payload))\n            // console.log(JSON.parse(fetchMylist().payload))\n            // console.log(fetchMylist().json())\n\n            \n            // const printMylist = async() => {\n            //     const mylist = await fetchMylist().payload;\n            //     return mylist;\n            //     console.log(mylist);\n            // }\n            // printMylist();\n\n            // this.props.fetchMylist()\n            // .then(res => {\n            //     this.setState({\n            //         mylist: res.payload\n            //     })\n            // })\n\n            this.props.fetchMylist()\n                    .then(res => {console.log(res.payload)})\n                    .then((data)=>{\n                        this.setState({\n                            mylist:data.map(item => ({\n                                title: item.title,\n                                id: item.id,\n                                img: item.img\n                            }))\n                        })\n                    })\n\n            console.log('mylist is:',this.mylist)\n\n            const printRecommendations = async() => {\n                const recommendations = await fetchRecommendations().payload\n                // return recommendations;\n                console.log(recommendations);\n            }\n            printRecommendations();    \n        }\n    \n        \n    removeFromMylist(list){\n            let mylist_ids = this.state.mylist.map(i=>i['id']);\n            let recommendations_ids = this.state.recommendations.map(i=>i['id']);\n            if (!((mylist_ids.includes(list.id)) && (recommendations_ids.includes(list.id)))){\n            this.setState({\n                mylist: this.state.mylist.filter(el => el.id !== list.id),\n                recommendations:this.state.recommendations.concat(list)\n            })\n        } \n    }\n\n    addToMylist(recommendation){\n            let mylist_ids = this.state.mylist.map(i=>i['id']);\n            let recommendations_ids = this.state.recommendations.map(i=>i['id']);\n            if (!((mylist_ids.includes(recommendation.id)) && (recommendations_ids.includes(recommendation.id)))){    \n            this.setState({\n                recommendations: this.state.recommendations.filter(el => el.id !== recommendation.id),\n                mylist:this.state.mylist.concat(recommendation)\n            }) \n        }\n    }\n\n    myList() {\n        return this.state.mylist.map(currentmylist => {\n          return <Mylist mylist={currentmylist} removeFromMylist={this.removeFromMylist} key={currentmylist._id}/>;\n        })\n      }\n    \n    recommendations() {\n        return this.state.recommendations.map(currentRecommendations => {\n            return <Recommendation recommendations={currentRecommendations} addToMylist={this.addToMylist} key={currentRecommendations._id}/>;\n        })\n    }\n\n    render() {\n      return (\n        <div>\n            <h2 className=\"movieDisplay__heading\">My List</h2>\n            <div className=\"movieDisplay__container\">{ this.myList() }</div>\n            <h2 className=\"movieDisplay__heading\">Recommendations</h2>  \n            <div className=\"movieDisplay__container\">{ this.recommendations() }</div>                 \n        </div>\n      )\n    }\n  }\n\n\n    const mapStateToProps = (state) => {\n        return {mylist: state.mylist, recommendations: state.recommendations }\n    }\n\n    const mapDispatchToProps = (dispatch) => ({\n        fetchMylist:()=>dispatch(fetchMylist()), \n        fetchRecommendations:()=>dispatch(fetchRecommendations())\n    })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Movies);"]},"metadata":{},"sourceType":"module"}