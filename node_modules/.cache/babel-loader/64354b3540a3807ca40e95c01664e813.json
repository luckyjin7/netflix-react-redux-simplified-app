{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/Demo6/src/components/Movies.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\nimport { fetchMylist, fetchRecommendations } from '../store/actions/index';\nimport axios from 'axios'; // import AddLogo from '../static/imgs/add.svg';\n// import RemoveLogo from '../static/imgs/remove.svg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mylist = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container-img\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"movies\",\n      width: \"250\",\n      height: \"400\",\n      src: `${props.mylist.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.mylist.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        props.removeFromMylist(props.mylist);\n      },\n      className: \"movieDisplay__container__button-btnMyList\",\n      children: \"Remove From My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\n_c = Mylist;\n\nconst Recommendation = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDisplay__container-img\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      width: \"250\",\n      height: \"400\",\n      src: `${props.recommendations.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: props.recommendations.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      props.addToMylist(props.recommendations);\n    },\n    className: \"movieDisplay__container__button-btnMyList\",\n    children: \"Add To My List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n\n_c2 = Recommendation;\n\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.removeFromMylist = this.removeFromMylist.bind(this);\n    this.addToMylist = this.addToMylist.bind(this); // this.removeMylistDatabase = this.removeMylistDatabase.bind(this) \n    // this.addMylistDatabase = this.addMylistDatabase.bind(this)\n\n    this.state = {\n      mylist: [],\n      recommendations: []\n    };\n  }\n\n  componentWillMount() {\n    let fetchMylist = this.props.fetchMylist;\n    return fetchMylist = () => {\n      axios.get('http://localhost:5000/mylist/').then(res => {\n        this.setState({\n          mylist: res.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }; // fetchRecommendations = () =>{\n    //     axios.get('http://localhost:5000/recommendations/')\n    //     .then(res => {\n    //         this.setState({\n    //         recommendations:res.data\n    //         })\n    //     })\n    //     .catch(error=>{\n    //         console.log(error)\n    //     })\n    // }\n  }\n\n  removeFromMylist(list) {\n    let mylist_ids = this.state.mylist.map(i => i['id']);\n    let recommendations_ids = this.state.recommendations.map(i => i['id']);\n\n    if (!(mylist_ids.includes(list.id) && recommendations_ids.includes(list.id))) {\n      this.setState({\n        mylist: this.state.mylist.filter(el => el.id !== list.id),\n        recommendations: this.state.recommendations.concat(list)\n      }); // update the database simultaneously       \n      // axios.post('http://localhost:5000/recommendations/add/',list)\n      //   .then(response => { console.log(response.data)});\n      // axios.delete('http://localhost:5000/mylist/'+list._id)\n      //   .then(response => { console.log(response.data)});\n    }\n  }\n\n  addToMylist(recommendation) {\n    let mylist_ids = this.state.mylist.map(i => i['id']);\n    let recommendations_ids = this.state.recommendations.map(i => i['id']);\n\n    if (!(mylist_ids.includes(recommendation.id) && recommendations_ids.includes(recommendation.id))) {\n      this.setState({\n        recommendations: this.state.recommendations.filter(el => el.id !== recommendation.id),\n        mylist: this.state.mylist.concat(recommendation)\n      }); // axios.post('http://localhost:5000/mylist/add/', recommendation)\n      //     .then(response => { console.log(response.data)});\n      // axios.delete('http://localhost:5000/recommendations/'+recommendation._id)\n      //     .then(response => { console.log(response.data)});\n    }\n  }\n\n  myList() {\n    return this.state.mylist.map(currentmylist => {\n      return /*#__PURE__*/_jsxDEV(Mylist, {\n        mylist: currentmylist,\n        removeFromMylist: this.removeFromMylist\n      }, currentmylist._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 18\n      }, this); //   return <Mylist mylist={currentmylist} removeMylistDatabase={this.removeMylistDatabase} key={currentmylist._id}/>;\n    });\n  }\n\n  recommendations() {\n    return this.state.recommendations.map(currentRecommendations => {\n      return /*#__PURE__*/_jsxDEV(Recommendation, {\n        recommendations: currentRecommendations,\n        addToMylist: this.addToMylist\n      }, currentRecommendations._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 20\n      }, this); // return <Recommendation recommendations={currentRecommendations} addMylistDatabase={this.addMylistDatabase} key={currentRecommendations._id}/>;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movieDisplay__heading\",\n        children: \"My List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.myList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"movieDisplay__heading\",\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDisplay__container\",\n        children: this.recommendations()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const mapStateToProps = (state) => {\n// return { mylist: state.mylist, recommendations: state.recommendation, mylist_update: state.mylist_update }\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    mylist: state.mylist,\n    recommendations: state.recommendations\n  };\n}; //     const mapDispatchToProps = (dispatch) => ({\n//         dispatch(tempMylist()), \n//         dispatch(fetchRecommendations())\n//   })\n\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    fetchMylist,\n    fetchRecommendations\n  }, dispatch);\n}; //   const mapDispatchToProps = (dispatch) => ({\n//         tempMylist:()=>dispatch(tempMylist()), \n//         tempRecommendations:()=>dispatch(tempRecommendations())\n//   })\n//     const mapDispatchToProps = (dispatch) => ({\n//         fetchMylist:()=>dispatch(fetchMylist()), \n//         fetchRecommendations:()=>dispatch(fetchRecommendations()),\n//         onRemoveClick:()=>dispatch(removeFromMylist())\n//   })\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Mylist\");\n$RefreshReg$(_c2, \"Recommendation\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/Demo6/src/components/Movies.js"],"names":["React","Component","bindActionCreators","connect","fetchMylist","fetchRecommendations","axios","Mylist","props","mylist","img","title","removeFromMylist","Recommendation","recommendations","addToMylist","Movies","constructor","bind","state","componentWillMount","get","then","res","setState","data","catch","error","console","log","list","mylist_ids","map","i","recommendations_ids","includes","id","filter","el","concat","recommendation","myList","currentmylist","_id","currentRecommendations","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\n\nimport { fetchMylist, fetchRecommendations } from '../store/actions/index';\nimport axios from 'axios';\n\n// import AddLogo from '../static/imgs/add.svg';\n// import RemoveLogo from '../static/imgs/remove.svg';\n\nconst Mylist = props => (\n    <div>\n      <div className=\"movieDisplay__container-img\">\n        <img alt=\"movies\" width=\"250\" height=\"400\" src={`${props.mylist.img}`}/>         \n          <h3>{props.mylist.title}</h3>\n            <button onClick={ () => {props.removeFromMylist(props.mylist)} } className=\"movieDisplay__container__button-btnMyList\">\n            {/* <button onClick={() =>{ props.removeMylistDatabase(props.mylist); props.onRemoveClick(props.mylist);}} className=\"movieDisplay__container__button-btnMyList\"> */}\n              {/* <img src={RemoveLogo} className=\"movieDisplay__container__button-btnMyList-add\"/> */}\n              {/* <RemoveLogo className=\"movieDisplay__container__button-btnMyList-add\"/> */}\n              Remove From My List\n            </button>\n        </div>\n      </div>\n)\n\nconst Recommendation = props => (\n    <div>\n    <div className=\"movieDisplay__container-img\">\n      <img width=\"250\" height=\"400\" src={`${props.recommendations.img}`}/>\n    </div>\n    <h3>{props.recommendations.title}</h3>\n        <button onClick={ () => {props.addToMylist(props.recommendations)} } className=\"movieDisplay__container__button-btnMyList\">\n      {/* <button onClick={() =>{ props.addMylistDatabase(props.recommendations) }} className=\"movieDisplay__container__button-btnMyList\"> */}\n        {/* <img src={AddLogo} className=\"movieDisplay__container__button-btnMyList-add\" /> */}\n          Add To My List\n      </button>\n    </div>\n)  \n\nclass Movies extends Component {\n    constructor(props) {\n        super(props)\n\n        this.removeFromMylist = this.removeFromMylist.bind(this);\n        this.addToMylist = this.addToMylist.bind(this);\n        // this.removeMylistDatabase = this.removeMylistDatabase.bind(this) \n        // this.addMylistDatabase = this.addMylistDatabase.bind(this)\n\n        this.state = {\n             mylist:[],\n             recommendations:[]\n        }\n    }\n\n    componentWillMount() {\n            let fetchMylist = this.props.fetchMylist;\n            return fetchMylist = () => {\n                axios.get('http://localhost:5000/mylist/')\n                .then(res => {\n                    this.setState({\n                        mylist:res.data\n                    })\n                })\n                .catch(error=>{\n                    console.log(error)\n                })   \n            }\n            \n            // fetchRecommendations = () =>{\n            //     axios.get('http://localhost:5000/recommendations/')\n            //     .then(res => {\n            //         this.setState({\n            //         recommendations:res.data\n            //         })\n            //     })\n            //     .catch(error=>{\n            //         console.log(error)\n            //     })\n            // }\n         \n        }\n        \n    removeFromMylist(list){\n            let mylist_ids = this.state.mylist.map(i=>i['id']);\n            let recommendations_ids = this.state.recommendations.map(i=>i['id']);\n            if (!((mylist_ids.includes(list.id)) && (recommendations_ids.includes(list.id)))){\n            this.setState({\n                mylist: this.state.mylist.filter(el => el.id !== list.id),\n                recommendations:this.state.recommendations.concat(list)\n            })\n            // update the database simultaneously       \n            // axios.post('http://localhost:5000/recommendations/add/',list)\n            //   .then(response => { console.log(response.data)});\n            // axios.delete('http://localhost:5000/mylist/'+list._id)\n            //   .then(response => { console.log(response.data)});\n        } \n    }\n\n    addToMylist(recommendation){\n        let mylist_ids = this.state.mylist.map(i=>i['id']);\n        let recommendations_ids = this.state.recommendations.map(i=>i['id']);\n        if (!((mylist_ids.includes(recommendation.id)) && (recommendations_ids.includes(recommendation.id)))){    \n        this.setState({\n            recommendations: this.state.recommendations.filter(el => el.id !== recommendation.id),\n            mylist:this.state.mylist.concat(recommendation)\n        }) \n        // axios.post('http://localhost:5000/mylist/add/', recommendation)\n        //     .then(response => { console.log(response.data)});\n        // axios.delete('http://localhost:5000/recommendations/'+recommendation._id)\n        //     .then(response => { console.log(response.data)});\n        }\n    }\n\n    myList() {\n        return this.state.mylist.map(currentmylist => {\n          return <Mylist mylist={currentmylist} removeFromMylist={this.removeFromMylist} key={currentmylist._id}/>;\n        //   return <Mylist mylist={currentmylist} removeMylistDatabase={this.removeMylistDatabase} key={currentmylist._id}/>;\n        })\n      }\n    \n    recommendations() {\n        return this.state.recommendations.map(currentRecommendations => {\n            return <Recommendation recommendations={currentRecommendations} addToMylist={this.addToMylist} key={currentRecommendations._id}/>;\n            // return <Recommendation recommendations={currentRecommendations} addMylistDatabase={this.addMylistDatabase} key={currentRecommendations._id}/>;\n        })\n    }\n\n    render() {\n      return (\n        <div>\n            <h2 className=\"movieDisplay__heading\">My List</h2>\n            <div className=\"movieDisplay__container\">{ this.myList() }</div>\n            <h3 className=\"movieDisplay__heading\">Recommendations</h3>\n            <div className=\"movieDisplay__container\">{ this.recommendations() }</div>\n        </div>\n      )\n    }\n  }\n  \n    // const mapStateToProps = (state) => {\n    // return { mylist: state.mylist, recommendations: state.recommendation, mylist_update: state.mylist_update }\n    // }\n  const mapStateToProps = (state) => {\n        return {mylist: state.mylist, recommendations: state.recommendations }\n  }\n\n//     const mapDispatchToProps = (dispatch) => ({\n//         dispatch(tempMylist()), \n//         dispatch(fetchRecommendations())\n//   })\n\n  const mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ fetchMylist, fetchRecommendations }, dispatch)\n  }\n  \n//   const mapDispatchToProps = (dispatch) => ({\n//         tempMylist:()=>dispatch(tempMylist()), \n//         tempRecommendations:()=>dispatch(tempRecommendations())\n//   })\n\n//     const mapDispatchToProps = (dispatch) => ({\n//         fetchMylist:()=>dispatch(fetchMylist()), \n//         fetchRecommendations:()=>dispatch(fetchRecommendations()),\n//         onRemoveClick:()=>dispatch(removeFromMylist())\n//   })\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Movies);"]},"metadata":{},"sourceType":"module"}