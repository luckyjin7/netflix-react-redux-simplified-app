{"ast":null,"code":"var _jsxFileName = \"/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display({\n  data,\n  fetchMovies\n}) {\n  _s();\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return data.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__heading\",\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container\",\n      children: data && data.mylist && data.mylist.map(function (mylist) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieDisplay__container__dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"movies\",\n              width: \"250\",\n              height: \"400\",\n              src: mylist.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieDisplay__container__dropdown-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDisplay__container__dropdown-content-a\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  removeMovieAction(mylist.id);\n                },\n                className: \"movieDisplay__container__dropdown-content__button\",\n                children: \"REMOVE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 37\n              }, this), mylist.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__heading\",\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDisplay__container\",\n      children: data && data.recommendations && data.recommendations.map(function (recommendations) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieDisplay__container__dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"movies\",\n              width: \"250\",\n              height: \"400\",\n              src: recommendations.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieDisplay__container__dropdown__img-imgoverlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movieDisplay__container__dropdown-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movieDisplay__container__dropdown-content-a\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  addMovieAction(mylist.id);\n                },\n                className: \"movieDisplay__container__dropdown-content__button\",\n                children: \"REMOVE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), recommendations.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Display, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Display;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovies: () => dispatch(fetchMovies()),\n    removeMovieAction: id => {\n      dispatch(removeMovieAction(id));\n    },\n    addMovieAction: id => {\n      dispatch(addMovieAction(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/components/Display.js"],"names":["React","useEffect","connect","fetchMovies","Display","data","loading","mylist","map","img","removeMovieAction","id","title","recommendations","addMovieAction","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../store/actions/export';\n\nfunction Display({ data, fetchMovies }){\n    useEffect(()=>{\n        fetchMovies();\n    }, []);\n    return data.loading ? (<h2>Loading</h2>) : (\n        <div>\n            <div className=\"movieDisplay__heading\">My List</div>\n            <div className=\"movieDisplay__container\">\n                {data && data.mylist && data.mylist.map(function(mylist){\n                    return (\n                        <div className=\"movieDisplay__container__dropdown\">\n                            <div>\n                                <img alt=\"movies\" width=\"250\" height=\"400\" src={mylist.img}/>\n                            </div>\n                            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />\n                            <div className=\"movieDisplay__container__dropdown-content\">\n                                <div className=\"movieDisplay__container__dropdown-content-a\">\n                                    <button onClick={ () => {removeMovieAction(mylist.id)}} className=\"movieDisplay__container__dropdown-content__button\">REMOVE</button>\n                                    {mylist.title}\n                                </div>                              \n                            </div> \n                        </div>\n                    )\n                })}\n            </div>\n\n            <div className=\"movieDisplay__heading\">Recommendations</div>\n            <div className=\"movieDisplay__container\">\n                {data && data.recommendations && data.recommendations.map(function(recommendations){\n                    return (\n                        <div className=\"movieDisplay__container__dropdown\">\n                            <div>\n                                <img alt=\"movies\" width=\"250\" height=\"400\" src={recommendations.img}/>\n                            </div>\n                            <div className=\"movieDisplay__container__dropdown__img-imgoverlay\" />\n                            <div className=\"movieDisplay__container__dropdown-content\">\n                                <div className=\"movieDisplay__container__dropdown-content-a\">\n                                    <button onClick={ () => {addMovieAction(mylist.id)}} className=\"movieDisplay__container__dropdown-content__button\">REMOVE</button>\n                                    {recommendations.title}\n                                </div>                              \n                            </div> \n                        </div>\n                    )\n                })}\n            </div>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      data: state.data,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      fetchMovies: () => dispatch(fetchMovies()),\n      removeMovieAction: (id) => {\n          dispatch(removeMovieAction(id))\n      },\n      addMovieAction: (id) => {\n          dispatch(addMovieAction(id))\n      }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\n"]},"metadata":{},"sourceType":"module"}