{"ast":null,"code":"import { FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE } from '../reducers/fetchTypes';\nconst initialState = {\n  loading: false,\n  mylist: [],\n  recommendations: [],\n  error: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_DATA_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_DATA_SUCCESS:\n      return {\n        loading: false,\n        mylist: action.payload.mylist,\n        recommendations: action.payload.recommendations,\n        error: \"\"\n      };\n\n    case FETCH_DATA_FAILURE:\n      return {\n        loading: false,\n        mylist: [],\n        recommendations: [],\n        error: action.payload\n      };\n\n    case REMOVE_MOVIE:\n      return { ...state,\n        mylist: state.mylist.filter(el => el.id !== action.id),\n        recommendations: state.recommendations.concat(state.mylist.find(el => el.id === action.id))\n      };\n\n    case ADD_MOVIE:\n      return { ...state,\n        mylist: state.mylist.concat(state.recommendations.find(el => el.id === action.id)),\n        recommendations: state.recommendations.filter(el => el.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Volumes/BEAUTY/interview-code/2021-4/Apple/netflix-react-app/src/store/reducers/fetchMovies.js"],"names":["FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","initialState","loading","mylist","recommendations","error","reducer","state","action","type","payload","REMOVE_MOVIE","filter","el","id","concat","find","ADD_MOVIE"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,kBAAjD,QAA2E,wBAA3E;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC,KADW;AAEnBC,EAAAA,MAAM,EAAC,EAFY;AAGnBC,EAAAA,eAAe,EAAC,EAHG;AAInBC,EAAAA,KAAK,EAAC;AAJa,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,kBAAL;AACE,aAAO,EAAC,GAAGS,KAAJ;AAAWL,QAAAA,OAAO,EAAE;AAApB,OAAP;;AACF,SAAKH,kBAAL;AACE,aAAO;AAAEG,QAAAA,OAAO,EAAC,KAAV;AACCC,QAAAA,MAAM,EAACK,MAAM,CAACE,OAAP,CAAeP,MADvB;AAECC,QAAAA,eAAe,EAAEI,MAAM,CAACE,OAAP,CAAeN,eAFjC;AAGCC,QAAAA,KAAK,EAAC;AAHP,OAAP;;AAIF,SAAKL,kBAAL;AACE,aAAO;AAAEE,QAAAA,OAAO,EAAE,KAAX;AACGC,QAAAA,MAAM,EAAE,EADX;AAEGC,QAAAA,eAAe,EAAE,EAFpB;AAGGC,QAAAA,KAAK,EAACG,MAAM,CAACE;AAHhB,OAAP;;AAIF,SAAKC,YAAL;AACE,aAAO,EAAC,GAAGJ,KAAJ;AACLJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaS,MAAb,CAAoBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUN,MAAM,CAACM,EAA3C,CADH;AAELV,QAAAA,eAAe,EAACG,KAAK,CAACH,eAAN,CAAsBW,MAAtB,CAA6BR,KAAK,CAACJ,MAAN,CAAaa,IAAb,CAAkBH,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUN,MAAM,CAACM,EAAzC,CAA7B;AAFX,OAAP;;AAIF,SAAKG,SAAL;AACE,aAAO,EAAC,GAAGV,KAAJ;AACLJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaY,MAAb,CAAoBR,KAAK,CAACH,eAAN,CAAsBY,IAAtB,CAA2BH,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUN,MAAM,CAACM,EAAlD,CAApB,CADH;AAELV,QAAAA,eAAe,EAACG,KAAK,CAACH,eAAN,CAAsBQ,MAAtB,CAA6BC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUN,MAAM,CAACM,EAApD;AAFX,OAAP;;AAIF;AACE,aAAOP,KAAP;AAxBJ;AA0BD,CA3BH;;AA6BA,eAAeD,OAAf","sourcesContent":["import { FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE } from '../reducers/fetchTypes'\n\nconst initialState = {\n  loading:false,\n  mylist:[],\n  recommendations:[],\n  error:\"\"\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case FETCH_DATA_REQUEST:\n        return {...state, loading: true}\n      case FETCH_DATA_SUCCESS:\n        return { loading:false, \n                mylist:action.payload.mylist,\n                recommendations: action.payload.recommendations,\n                error:\"\"}\n      case FETCH_DATA_FAILURE:\n        return { loading: false,\n                  mylist: [],\n                  recommendations: [],\n                  error:action.payload}\n      case REMOVE_MOVIE:\n        return {...state,\n          mylist: state.mylist.filter(el => el.id !== action.id),\n          recommendations:state.recommendations.concat(state.mylist.find(el => el.id === action.id))\n        }\n      case ADD_MOVIE:\n        return {...state,\n          mylist: state.mylist.concat(state.recommendations.find(el => el.id === action.id)),\n          recommendations:state.recommendations.filter(el => el.id !== action.id)\n        }\n      default:\n        return state;\n    }\n  }\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}